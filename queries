
# Contininuous Query to get the mean of all numeric stats in 1 minute buckets to a new measurement
CREATE CONTINUOUS QUERY mean_1m ON tweestat_raw RESAMPLE EVERY 10m BEGIN SELECT count(no_hashtags) AS total_tweets, mean(has_coordinates) AS has_coordinates, mean(has_place) AS has_place, mean(is_quote_status) AS is_quote, mean(retweeted_status) AS is_retweeted, mean(possibly_sensitive) AS is_sensitive, mean(no_hashtags) AS no_hashtags, mean(no_characters) AS no_characters, mean(no_urls) AS no_urls, mean(usr_favourites_count) AS usr_favourites, mean(usr_followers_count) AS usr_followers, mean(usr_friends_count) AS usr_friends, mean(usr_statuses_count) AS usr_statuses, mean(tweet_language_de) AS lang_de, mean(tweet_language_en) AS lang_en, mean(tweet_language_es) AS lang_es, mean(tweet_language_fr) AS lang_fr, mean(tweet_language_ja) AS lang_ja, mean(tweet_language_ru) AS lang_ru, mean(usr_language_de) AS usr_lang_de, mean(usr_language_en) AS usr_lang_en, mean(usr_language_es) AS usr_lang_es, mean(usr_language_fr) AS usr_lang_fr, mean(usr_language_ja) AS usr_lang_ja, mean(usr_language_ru) AS usr_lang_ru, mean(source_android) AS source_android, mean(source_ipad) AS source_ipad, mean(source_iphone) AS source_iphone, mean(source_web) AS source_web INTO tweestat.autogen.tweet FROM tweestat_raw.autogen.tweet GROUP BY time(1m) END

# Rank tags by their occurrence
SELECT top(lang_sum,usr_language,15) FROM (SELECT count(no_hashtags) as lang_sum FROM tweet WHERE time > now() - 10d GROUP BY usr_language)